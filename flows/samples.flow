[{"id":"d3d9c332.fc75c","type":"tab","label":"MQTT"},{"id":"40b89311.defb7c","type":"tab","label":"GPIO"},{"id":"f2acd4e5.08d0d8","type":"tab","label":"Websockets"},{"id":"3843313a.bb195e","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"6a68553b.53639c","type":"websocket-listener","z":"f2acd4e5.08d0d8","path":"/ws/simple","wholemsg":"false"},{"id":"5b2081ec.79492","type":"mqtt in","z":"d3d9c332.fc75c","name":"","topic":"xxx","qos":"2","broker":"3843313a.bb195e","x":90,"y":160,"wires":[["a806798f.5e2e28"]]},{"id":"a806798f.5e2e28","type":"debug","z":"d3d9c332.fc75c","name":"","active":true,"console":"false","complete":"payload","x":310,"y":160,"wires":[]},{"id":"8ed930aa.905e","type":"mqtt out","z":"d3d9c332.fc75c","name":"","topic":"xxx","qos":"","retain":"","broker":"3843313a.bb195e","x":290,"y":80,"wires":[]},{"id":"8a68e346.705d4","type":"inject","z":"d3d9c332.fc75c","name":"","topic":"xxx","payload":"Here is a string. Does it come through as a message in MQTT?","payloadType":"str","repeat":"","crontab":"","once":false,"x":90,"y":80,"wires":[["8ed930aa.905e"]]},{"id":"110383a1.1b345c","type":"rpi-gpio in","z":"40b89311.defb7c","name":"18","pin":"12","intype":"tri","debounce":"25","read":true,"x":110,"y":80,"wires":[["7d413def.4e7c34"]]},{"id":"4df6dfc0.44544","type":"rpi-gpio out","z":"40b89311.defb7c","name":"17","pin":"11","set":true,"level":"0","out":"out","x":330,"y":140,"wires":[]},{"id":"3fb49605.3d517a","type":"inject","z":"40b89311.defb7c","name":"","topic":"","payload":"0","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":140,"wires":[["4df6dfc0.44544"]]},{"id":"7d413def.4e7c34","type":"debug","z":"40b89311.defb7c","name":"","active":true,"console":"false","complete":"false","x":350,"y":80,"wires":[]},{"id":"c926d3f.18d113","type":"inject","z":"40b89311.defb7c","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":180,"wires":[["4df6dfc0.44544"]]},{"id":"6b410223.9a6dbc","type":"inject","z":"f2acd4e5.08d0d8","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"","crontab":"00 11 * * *","once":false,"x":150,"y":200,"wires":[["75e8d24a.a9914c"]]},{"id":"304d051b.c5bbaa","type":"websocket out","z":"f2acd4e5.08d0d8","name":"","server":"6a68553b.53639c","client":"","x":640,"y":200,"wires":[]},{"id":"ba4121e3.8b01e","type":"http response","z":"f2acd4e5.08d0d8","name":"Untitled Theme 1","x":650,"y":80,"wires":[]},{"id":"397adba4.29caa4","type":"http in","z":"f2acd4e5.08d0d8","name":"","url":"/simple","method":"get","swaggerDoc":"","x":130,"y":80,"wires":[["53801956.ebd4b8"]]},{"id":"53801956.ebd4b8","type":"template","z":"f2acd4e5.08d0d8","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":390,"y":80,"wires":[["ba4121e3.8b01e"]]},{"id":"75e8d24a.a9914c","type":"function","z":"f2acd4e5.08d0d8","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":200,"wires":[["304d051b.c5bbaa"]]},{"id":"f80527cd.08dd58","type":"websocket in","z":"f2acd4e5.08d0d8","name":"","server":"6a68553b.53639c","client":"","x":140,"y":140,"wires":[["8104ac2a.cabd2"]]},{"id":"8104ac2a.cabd2","type":"debug","z":"f2acd4e5.08d0d8","name":"","active":true,"console":"false","complete":"false","x":370,"y":140,"wires":[]}]