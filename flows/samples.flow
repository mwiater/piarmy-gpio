[{"id":"df1216ba.a820d8","type":"tab","label":"MQTT"},{"id":"dfe4b2d1.74a33","type":"tab","label":"GPIO"},{"id":"85994d09.6c559","type":"tab","label":"Websockets"},{"id":"592b1f64.3776","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"50704906.415308","type":"websocket-listener","z":"85994d09.6c559","path":"/ws/simple","wholemsg":"false"},{"id":"afbac19a.29407","type":"mqtt in","z":"df1216ba.a820d8","name":"","topic":"xxx","qos":"2","broker":"592b1f64.3776","x":90,"y":160,"wires":[["bfa37ac1.bed328"]]},{"id":"bfa37ac1.bed328","type":"debug","z":"df1216ba.a820d8","name":"","active":true,"console":"false","complete":"payload","x":310,"y":160,"wires":[]},{"id":"67e01846.ce5fe8","type":"mqtt out","z":"df1216ba.a820d8","name":"","topic":"xxx","qos":"","retain":"","broker":"592b1f64.3776","x":290,"y":80,"wires":[]},{"id":"8d9d6f8b.7069b","type":"inject","z":"df1216ba.a820d8","name":"","topic":"xxx","payload":"Here is a string. Does it come through as a message in MQTT?","payloadType":"str","repeat":"","crontab":"","once":false,"x":90,"y":80,"wires":[["67e01846.ce5fe8"]]},{"id":"35da059c.3cd12a","type":"rpi-gpio in","z":"dfe4b2d1.74a33","name":"18","pin":"12","intype":"tri","debounce":"25","read":true,"x":110,"y":80,"wires":[["32ab49f0.9e0ae6"]]},{"id":"b1597607.bfa2e8","type":"rpi-gpio out","z":"dfe4b2d1.74a33","name":"17","pin":"11","set":true,"level":"0","out":"out","x":330,"y":140,"wires":[]},{"id":"1dafa3ed.8d22cc","type":"inject","z":"dfe4b2d1.74a33","name":"","topic":"","payload":"0","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":140,"wires":[["b1597607.bfa2e8"]]},{"id":"32ab49f0.9e0ae6","type":"debug","z":"dfe4b2d1.74a33","name":"","active":true,"console":"false","complete":"false","x":350,"y":80,"wires":[]},{"id":"1394be09.2ffc12","type":"inject","z":"dfe4b2d1.74a33","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":false,"x":110,"y":180,"wires":[["b1597607.bfa2e8"]]},{"id":"8100cc47.6ef74","type":"inject","z":"85994d09.6c559","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"5","crontab":"","once":false,"x":150,"y":200,"wires":[["e062ebee.904498"]]},{"id":"636c0c0a.e66844","type":"websocket out","z":"85994d09.6c559","name":"","server":"50704906.415308","client":"","x":640,"y":200,"wires":[]},{"id":"30c79f58.d0dc4","type":"http response","z":"85994d09.6c559","name":"Untitled Theme 1","x":650,"y":80,"wires":[]},{"id":"ce4823f8.ec047","type":"http in","z":"85994d09.6c559","name":"","url":"/simple","method":"get","swaggerDoc":"","x":130,"y":80,"wires":[["95292e0c.9fb2"]]},{"id":"95292e0c.9fb2","type":"template","z":"85994d09.6c559","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":390,"y":80,"wires":[["30c79f58.d0dc4"]]},{"id":"e062ebee.904498","type":"function","z":"85994d09.6c559","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":200,"wires":[["636c0c0a.e66844"]]},{"id":"eecf9d2b.92fb7","type":"websocket in","z":"85994d09.6c559","name":"","server":"50704906.415308","client":"","x":140,"y":140,"wires":[["d76ad7aa.bce908"]]},{"id":"d76ad7aa.bce908","type":"debug","z":"85994d09.6c559","name":"","active":true,"console":"false","complete":"false","x":370,"y":140,"wires":[]}]