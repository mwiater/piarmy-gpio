[{"id":"eaf56ba5.c90878","type":"tab","label":"Websockets"},{"id":"44c6b6d5.503dc8","type":"tab","label":"Weather"},{"id":"67c618be.92ab78","type":"websocket-listener","z":"eaf56ba5.c90878","path":"/ws/simple","wholemsg":"false"},{"id":"d2f17f75.2cef8","type":"inject","z":"eaf56ba5.c90878","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"","crontab":"00 11 * * *","once":false,"x":150,"y":200,"wires":[["b1abaf8e.816fa"]]},{"id":"817200a0.837eb","type":"websocket out","z":"eaf56ba5.c90878","name":"","server":"67c618be.92ab78","client":"","x":640,"y":200,"wires":[]},{"id":"e0afad99.f8699","type":"http response","z":"eaf56ba5.c90878","name":"Untitled Theme 1","x":650,"y":80,"wires":[]},{"id":"729133de.81969c","type":"http in","z":"eaf56ba5.c90878","name":"","url":"/simple","method":"get","swaggerDoc":"","x":130,"y":80,"wires":[["4c7ecc77.8a2d44"]]},{"id":"4c7ecc77.8a2d44","type":"template","z":"eaf56ba5.c90878","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":390,"y":80,"wires":[["e0afad99.f8699"]]},{"id":"b1abaf8e.816fa","type":"function","z":"eaf56ba5.c90878","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":200,"wires":[["817200a0.837eb"]]},{"id":"6c74f7e8.da9488","type":"websocket in","z":"eaf56ba5.c90878","name":"","server":"67c618be.92ab78","client":"","x":140,"y":140,"wires":[["70018971.7ff418"]]},{"id":"70018971.7ff418","type":"debug","z":"eaf56ba5.c90878","name":"","active":true,"console":"false","complete":"false","x":370,"y":140,"wires":[]},{"id":"38b388d9.5e3878","type":"inject","z":"44c6b6d5.503dc8","name":"Run","topic":"test","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":110,"y":100,"wires":[["4927489b.356ca8"]]},{"id":"23cb69c9.4de246","type":"debug","z":"44c6b6d5.503dc8","name":"","active":true,"console":"false","complete":"false","x":770,"y":100,"wires":[]},{"id":"4927489b.356ca8","type":"openweathermap","z":"44c6b6d5.503dc8","name":"","wtype":"current","lon":"","lat":"","city":"Portland, OR","country":"US","language":"en","x":310,"y":100,"wires":[["571a899c.ecb3f8"]]},{"id":"571a899c.ecb3f8","type":"function","z":"44c6b6d5.503dc8","name":"Convert Timestamp","func":"msg.payload.sunrise = Date(msg.payload.sunrise).toString();\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":100,"wires":[["23cb69c9.4de246"]]}]